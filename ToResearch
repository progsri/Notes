1. nslookup -debug output
2. SSO vs OAuth vs SAML
3. Single bean w.r.t multi threading.
4. AOP annotations https://howtodoinjava.com/spring-aop/aspectj-after-returning-annotation-example/
5. Application yaml has missing properties ...does it start the spring boot app
6. ThreadLocal ...how does it work
7. Spring @Order, @DependsOn, @Primary, @Import
 --https://stackoverflow.com/questions/35502164/what-is-the-use-case-of-import-annotation
8. in a single request with multiple hibernate call does hikari use the same connection.
9. Get all logs for spring boot including the libraries
10. in a local machine what is anycast 
11. A router will have all the ips address it owns and the ips of the other connected router, does it have the ip addreses of 
    the systems connected to other routers.
12. How does @Transactional work..does it get transaction id from the DB when executed.
13. How can L4 Load Balancer maintain session affinity when the session info is in the L7 layer of the packet.
14. What exactly does reverse proxy mean.
15. <bean class="org.springframework.jndi.JndiObjectFactoryBean" lazy-init="true" init-method="" destroy-method="" depends-on="">  
what is lazy-init, init-method, destroy-method, depends-on?
16.How does siteminder work ?
17. @Nullable https://docs.spring.io/spring/docs/5.2.1.RELEASE/spring-framework-reference/core.html#null-safety
18. HOW SSL works, capture the HTTPS packet in wireshark and capture the key and decrypt it
19. 	@PersistenceContext
20. Spring @ConstructorProperties
21. Spring boot Filters and custom filters
22. Best praactice:
   at https://docs.spring.io/spring/docs/5.2.1.RELEASE/spring-framework-reference/core.html#beans-dependencies
   a large number of constructor arguments is a bad code smell, implying that the class likely has too many responsibilities and
   should be refactored to better address proper separation of concerns.
23. Explore Bind9 for DNS features.
24. Explore Kea for DHCP features.
25. Explore Ha Proxy for L4 load balancing features.
26. Expore Nginx for web server features.
27. If the transactional bean is implementing an interface, by default the proxy will be a Java Dynamic Proxy. This means that only external method calls that 
    come in through the proxy will be intercepted. Any self-invocation calls will not start any transaction,even if the method has the @Transactional annotation.
